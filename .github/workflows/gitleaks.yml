name: Reusable Gitleaks Scan

on:
  workflow_call:
    inputs:
      config_path:
        required: false
        type: string
        default: ".gitleaks.toml"

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2.3.4
        with:
          args: detect --source . \
                       --config ${{ inputs.config_path }} \
                       --report-format sarif \
                       --report-path gitleaks-results.sarif \
                       --exit-code 1   # üö® block pushes if leaks exist
        env:
          GITLEAKS_LICENSE: "FF2062-5126C7-2E2CD7-38B07D-25F736-V3"
          GITLEAKS_ENABLE_COMMENTS: true

      - name: Debug ‚Äî check SARIF file
        if: always()
        run: ls -lah gitleaks-results.sarif || echo "‚ö†Ô∏è No SARIF file found"

      - name: Upload SARIF as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report         # ‚úÖ artifact name, not a file path
          path: gitleaks-results.sarif  # ‚úÖ actual SARIF file path

      - name: Upload SARIF to Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks-results.sarif
